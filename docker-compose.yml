services:
  client_app:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
      MY_PORT: 3000
      NODE_ENV: development
    volumes:
      - ./client:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  server_app:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    # environment:
    #   DATABASE_URL: "mysql://root:111111@localhost:33306/mydb" # ชี้ไปที่ localhost
    volumes:
      - ./server:/app
      - /app/node_modules
      # เพิ่ม volumes สำหรับ hot reload
      - ./server/src:/app/src
      - ./server/test:/app/test
      - ./node_modules:/usr/src/app/node_modules # แชร์ node_modules จาก Host
      - ./server/prisma:/usr/src/app/prisma # ถ้ามี schema.prisma
    command: sh -c "
      until nc -z mysql 3306; do
      echo 'Waiting for MySQL...';
      sleep 2;
      done;
      sleep 10;
      npx prisma generate &&
      npx prisma migrate dev --name init &&
      npm run start:dev"
    depends_on:
      - mysql

  mysql:
    image: mysql
    restart: always
    ports:
      - '33306:3306'
    volumes:
      - './db_mysql/mysql/:/var/lib/mysql'
    environment:
      MYSQL_ROOT_PASSWORD: '111111'
    command: mysqld --sql_mode=""

  pma:
    image: phpmyadmin
    restart: always
    ports:
      - 43306:80
    environment:
      - PMA_ARBITRARY=1
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=keng
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    volumes:
      - './db_mongo/mongo/:/var/lib/mongo'

  redis:
    image: redis
